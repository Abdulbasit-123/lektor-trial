title: pagination
---
summary: Provides access to the pagination information.
---
type: property
---
body:

When pagination is enabled for a page, then `pagination` will return a
pagination controller that gives access to a query that is specific for the
actual page that was navigated to, instead of including all children as well
as information about the current page.  In a nutshell: when pagination is
enabled, you should use `pagination.items` instead of `children` on an
overview page.

The following attributes exist on the pagination object:

| Attribute   | Description
| ----------- | ------------
| `current`   | The current record
| `prev`      | The record for the last page (might be `None`)
| `next`      | The record for the net page (might be `None`)
| `total`     | The total number of items across all pages
| `pages`     | The total number of pages
| `has_prev`  | `True` if a previous page exists
| `has_next`  | `True` if a next page exists
| `items`     | The query that resolves to the children of the current page.

## Item Query Example

Simple example that shows how to iterate over the items specific to a
page:

```html+jinja
<ul>
{% for child in this.pagination.items %}
  <li>{{ child.title }}
{% endfor %}
</ul>
```

## Pagination Example

This example shows how to render a basic pagination with a previous and
next page link as well as the number of the current page:

```html+jinja
<div class="pagination">
  {% if this.pagination.has_prev %}
    <a href="{{ this.pagination.prev_page|url }}">&laquo;</a>
  {% else %}
    <span class="disabled">&laquo;</span>
  {% endif %}
  — <strong>{{ this.pagination.page }}</strong> —
  {% if this.pagination.has_next %}
    <a href="{{ this.pagination.next_page|url }}">&raquo;</a>
  {% else %}
    <span class="disabled">&raquo;</span>
  {% endif %}
</div>
```
